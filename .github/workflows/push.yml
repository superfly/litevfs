name: "Push"
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  lint:
    name: "Lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: "stable"
      - uses: Swatinem/rust-cache@v2

      - name: cargo fmt
        run: cargo fmt --all --check
      - name: cargo clippy
        run: cargo clippy --all-features -- --deny warnings
      - name: cargo check
        run: cargo check

  test:
    name: "Unit Tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: "stable"
      - uses: Swatinem/rust-cache@v2

      - name: Run unit tests
        run: cargo test --lib

  build:
    name: "Build LiteVFS shared library (Linux)"
    strategy:
      matrix:
        include:
          - os: "ubuntu-latest"
            target: "x86_64-unknown-linux-gnu"
          - os: "ubuntu-latest"
            target: "x86_64-unknown-linux-musl"
          - os: "ubuntu-latest"
            target: "aarch64-unknown-linux-gnu"
          - os: "ubuntu-latest"
            target: "aarch64-unknown-linux-musl"
          - os: "macos-latest"
            target: "x86_64-apple-darwin"
          - os: "macos-latest"
            target: "aarch64-apple-darwin"
          - os: "windows-latest"
            target: "x86_64-pc-windows-msvc"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: "stable"

      - name: Install cross-compilation tools
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}

      - uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --package litevfs --release
